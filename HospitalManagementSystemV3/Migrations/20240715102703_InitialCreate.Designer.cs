// <auto-generated />
using System;
using HospitalManagementSystemV3.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalManagementSystemV3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240715102703_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "General Checkup",
                            DoctorId = new Guid("ba1d5a8b-063f-473e-b9c0-524b89b3f825"),
                            PatientId = new Guid("caefec1f-667b-458c-87b5-adeae3ee760c")
                        },
                        new
                        {
                            Id = 2,
                            Description = "Follow-up Visit",
                            DoctorId = new Guid("ba1d5a8b-063f-473e-b9c0-524b89b3f825"),
                            PatientId = new Guid("224678c3-2865-4dc0-876c-670df6a74d22")
                        },
                        new
                        {
                            Id = 3,
                            Description = "Consultation",
                            DoctorId = new Guid("9f57f93c-22fb-413a-8206-e814efc81c8d"),
                            PatientId = new Guid("fa700bb3-ff4a-407f-be1f-dbe45c6ae509")
                        });
                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba1d5a8b-063f-473e-b9c0-524b89b3f825"),
                            Address = "123 Main St, Anytown, USA",
                            Email = "john.doe@example.com",
                            Name = "Dr. John Doe",
                            Password = "password123",
                            Phone = "123-456-7890",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = new Guid("9f57f93c-22fb-413a-8206-e814efc81c8d"),
                            Address = "456 Oak St, Anytown, USA",
                            Email = "jane.smith@example.com",
                            Name = "Dr. Jane Smith",
                            Password = "password123",
                            Phone = "098-765-4321",
                            Username = "jane_smith"
                        });
                });

            modelBuilder.Entity("HospitalManagementSystemV3.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DoctorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("caefec1f-667b-458c-87b5-adeae3ee760c"),
                            Address = "789 Pine St, Anytown, USA",
                            Email = "patient.one@example.com",
                            Name = "Patient One",
                            Password = "password123",
                            Phone = "111-222-3333",
                            Username = "patient_one"
                        },
                        new
                        {
                            Id = new Guid("224678c3-2865-4dc0-876c-670df6a74d22"),
                            Address = "321 Elm St, Anytown, USA",
                            Email = "patient.two@example.com",
                            Name = "Patient Two",
                            Password = "password123",
                            Phone = "444-555-6666",
                            Username = "patient_two"
                        },
                        new
                        {
                            Id = new Guid("fa700bb3-ff4a-407f-be1f-dbe45c6ae509"),
                            Address = "654 Birch St, Anytown, USA",
                            Email = "patient.three@example.com",
                            Name = "Patient Three",
                            Password = "password123",
                            Phone = "777-888-9999",
                            Username = "patient_three"
                        });
                });

            modelBuilder.Entity("Appointment", b =>
                {
                    b.HasOne("Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagementSystemV3.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalManagementSystemV3.Models.Patient", b =>
                {
                    b.HasOne("Doctor", null)
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId");
                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("HospitalManagementSystemV3.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
